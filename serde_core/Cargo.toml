[package]
name = "serde_core"
version = "1.0.203" # remember to update html_root_url and serde_derive dependency
authors = [
    "Erick Tryzelaar <erick.tryzelaar@gmail.com>",
    "David Tolnay <dtolnay@gmail.com>",
]
build = "build.rs"
categories = ["encoding", "no-std", "no-std::no-alloc"]
description = "Core functionalities and abstractions for the Serde serialization/deserialization framework"
documentation = "https://docs.rs/serde_core"
edition = "2018"
homepage = "https://serde.rs"
keywords = ["serde", "serialization", "no_std"]
license = "MIT OR Apache-2.0"
readme = "../crates-io.md"
repository = "https://github.com/serde-rs/serde"
rust-version = "1.31"

[dev-dependencies]
serde_derive = { version = "1", path = "../serde_derive" }
serde = { version = "1", path = "../serde" }

[lib]
doc-scrape-examples = false

[package.metadata.playground]
features = ["rc"]

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]
rustdoc-args = ["--cfg", "doc_cfg", "--generate-link-to-definition"]

### FEATURES #################################################################

[features]
default = ["std", "result"]


# Provide impls for common standard library types like Vec<T> and HashMap<K, V>.
# Requires a dependency on the Rust standard library.
std = []

# Provide impls for types that require unstable functionality. For tracking and
# discussion of unstable functionality please refer to this issue:
#
#    https://github.com/serde-rs/serde/issues/812
unstable = []

# Provide impls for types in the Rust core allocation and collections library
# including String, Box<T>, Vec<T>, and Cow<T>. This is a subset of std but may
# be enabled without depending on all of std.
alloc = []

# Opt into impls for Rc<T> and Arc<T>. Serializing and deserializing these types
# does not preserve identity and may result in multiple copies of the same data.
# Be sure that this is what you want before enabling this feature.
rc = []

# Provide impls for Result<T, E>. Enabling these impls allows for serialization
# and deserialization of Result types, which may be useful in certain contexts
# but could lead to confusion if ? or unwrap are overused.
result = []
